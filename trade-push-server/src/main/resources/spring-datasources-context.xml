<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>

<!--    <bean id="dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close" >-->
<!--        &lt;!&ndash; 数据库基本信息配置 &ndash;&gt;-->
<!--        <property name = "url" value = "${jdbc.url}" />-->
<!--        <property name = "username" value = "${jdbc.username}" />-->
<!--        <property name = "password" value = "${jdbc.password}" />-->
<!--        <property name = "driverClassName" value = "${jdbc.driver}" />-->
<!--        <property name = "filters" value = "${jdbc.filters}" />-->
<!--        &lt;!&ndash; 最大并发连接数 &ndash;&gt;-->
<!--        <property name = "maxActive" value = "${jdbc.maxActive}" />-->
<!--        &lt;!&ndash; 初始化连接数量 &ndash;&gt;-->
<!--        <property name = "initialSize" value = "${jdbc.initialSize}" />-->
<!--        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
<!--        <property name = "maxWait" value = "${jdbc.maxWait}" />-->
<!--        &lt;!&ndash; 最小空闲连接数 &ndash;&gt;-->
<!--        <property name = "minIdle" value = "${jdbc.minIdle}" />-->
<!--        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
<!--        <property name = "timeBetweenEvictionRunsMillis" value ="${jdbc.timeBetweenEvictionRunsMillis}" />-->
<!--        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
<!--        <property name = "minEvictableIdleTimeMillis" value ="${jdbc.minEvictableIdleTimeMillis}" />-->
<!--        <property name = "validationQuery" value="${jdbc.validationQuery}" />-->
<!--        <property name = "testWhileIdle" value="${jdbc.testWhileIdle}" />-->
<!--        <property name = "testOnBorrow" value="${jdbc.testOnBorrow}" />-->
<!--        <property name = "testOnReturn" value="${jdbc.testOnReturn}" />-->
<!--        <property name = "maxOpenPreparedStatements" value ="${jdbc.maxOpenPreparedStatements}" />-->
<!--        &lt;!&ndash; 打开 removeAbandoned 功能 &ndash;&gt;-->
<!--        <property name = "removeAbandoned" value = "${jdbc.removeAbandoned}" />-->
<!--        &lt;!&ndash; 1800 秒，也就是 30 分钟 &ndash;&gt;-->
<!--        <property name = "removeAbandonedTimeout" value ="${jdbc.removeAbandonedTimeout}" />-->
<!--        &lt;!&ndash; 关闭 abanded 连接时输出错误日志 &ndash;&gt;-->
<!--        <property name = "logAbandoned" value = "${jdbc.logAbandoned}" />-->
<!--    </bean>-->

<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--    </bean>-->
<!--    <tx:annotation-driven />-->

<!--    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--        <property name="mapperLocations" value="classpath*:/mapping/**/*Mapper.xml" />-->
<!--    </bean>-->

<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="sqlSessionFactoryBeanName" value="sessionFactory" />-->
<!--        <property name="basePackage" value="com.yskj.push.dao" />-->
<!--    </bean>-->

<!--     &lt;!&ndash;read redis 配置&ndash;&gt;-->
<!--    <bean id="readRedisService" class="com.yskj.push.framework.cache.ReadRedisServiceImpl" primary="true">-->
<!--        <property name="jedisPool" ref="readJedisPool"/>-->
<!--    </bean>-->
<!--    <bean id="readJedisPool" class="redis.clients.jedis.JedisPool">-->
<!--        <constructor-arg index="0" ref="readRedisConfig"/>-->
<!--        <constructor-arg index="1" name="host" type="java.lang.String">-->
<!--            <value>${read.redis.host}</value>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg index="2" name="port">-->
<!--            <value>${read.redis.port}</value>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg index="3" name="timeout">-->
<!--            <value>${read.redis.timeout}</value>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg index="4" name="password">-->
<!--            <value>${read.redis.password}</value>-->
<!--        </constructor-arg>-->
<!--    </bean>-->
<!--    <bean id="readRedisConfig" class="com.yskj.push.framework.cache.RedisPoolConfig">-->
<!--        <property name="maxActive">-->
<!--            <value>${read.redis.maxTotal}</value>-->
<!--        </property>-->
<!--        <property name="maxIdle">-->
<!--            <value>${read.redis.maxIdle}</value>-->
<!--        </property>-->
<!--        <property name="maxWait">-->
<!--            <value>${read.redis.maxWaitMillis}</value>-->
<!--        </property>-->
<!--    </bean>-->


<!--    &lt;!&ndash; write redis 配置&ndash;&gt;-->
<!--    <bean id="writeRedisService" class="com.yskj.push.framework.cache.WriteRedisServiceImpl" primary="true">-->
<!--        <property name="jedisPool" ref="writeJedisPool"/>-->
<!--    </bean>-->
<!--    <bean id="writeJedisPool" class="redis.clients.jedis.JedisPool">-->
<!--        <constructor-arg index="0" ref="writeRedisConfig"/>-->
<!--        <constructor-arg index="1" name="host" type="java.lang.String">-->
<!--            <value>${write.redis.host}</value>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg index="2" name="port">-->
<!--            <value>${write.redis.port}</value>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg index="3" name="timeout">-->
<!--            <value>${write.redis.timeout}</value>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg index="4" name="password">-->
<!--            <value>${write.redis.password}</value>-->
<!--        </constructor-arg>-->
<!--    </bean>-->

<!--    <bean id="writeRedisConfig" class="com.yskj.push.framework.cache.RedisPoolConfig">-->
<!--        <property name="maxActive">-->
<!--            <value>${write.redis.maxTotal}</value>-->
<!--        </property>-->
<!--        <property name="maxIdle">-->
<!--            <value>${write.redis.maxIdle}</value>-->
<!--        </property>-->
<!--        <property name="maxWait">-->
<!--            <value>${write.redis.maxWaitMillis}</value>-->
<!--        </property>-->
<!--    </bean>-->



    <!--邮箱-->
    <!--配置邮件接口 -->
<!--    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">-->
<!--        <property name="host" value="${mail.smtp.host}" />-->
<!--        <property name="port" value="${mail.smtp.port}"/>-->
<!--        <property name="username" value="${mail.smtp.username}" />-->
<!--        <property name="password" value="${mail.smtp.password}" />-->
<!--        <property name="defaultEncoding" value="${mail.smtp.defaultEncoding}" />-->
<!--        <property name="javaMailProperties">-->
<!--            <props>-->
<!--                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>-->
<!--                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

</beans>
